{"version":3,"file":"haveIBeenPwned.esm.js","sources":["../src/haveIBeenPwned.ts"],"sourcesContent":["const isNodeJs = typeof process !== 'undefined' &&\n    process.release &&\n    process.release.name === 'node';\nconst textEncode = (text) => {\n    if (isNodeJs) {\n        const utf8 = decodeURI(encodeURIComponent(text));\n        const result = new Uint8Array(utf8.length);\n        for (let i = 0; i < utf8.length; i += 1) {\n            result[i] = utf8.charCodeAt(i);\n        }\n        return result;\n    }\n    try {\n        // eslint-disable-next-line compat/compat\n        return new TextEncoder().encode(text);\n    }\n    catch (error) {\n        throw new Error(`No encoder found, ${error}`);\n    }\n};\nconst digestMessage = async (message) => {\n    const data = textEncode(message);\n    let hash = '';\n    if (isNodeJs) {\n        // eslint-disable-next-line global-require\n        const crypto = require('crypto');\n        hash = crypto.createHash('sha1').update(message).digest('hex').toUpperCase();\n    }\n    else if (crypto) {\n        const hashBuffer = await crypto.subtle.digest('SHA-1', data);\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\n        hash = hashArray\n            .map((b) => b.toString(16).padStart(2, '0'))\n            .join('')\n            .toUpperCase();\n    }\n    return hash;\n};\nconst pwnedUrl = 'https://api.pwnedpasswords.com/range/';\nconst defaultNetworkErrorHandler = (_error) => {\n    return false;\n};\nexport default async (password, { universalFetch, url = pwnedUrl, networkErrorHandler = defaultNetworkErrorHandler, }) => {\n    // we don't need to check passwords with a length smaller 2 which can happen for repeat matcher or if we don't have a fetch function\n    if (!universalFetch || password.length < 2) {\n        return null;\n    }\n    const passwordHash = (await digestMessage(password)).toUpperCase();\n    const range = passwordHash.slice(0, 5);\n    const suffix = passwordHash.slice(5);\n    const response = await universalFetch(`${url}${range}`, {\n        method: 'GET',\n        headers: {\n            'Add-Padding': 'true',\n        },\n    }).catch((error) => {\n        return networkErrorHandler(error);\n    });\n    if (typeof response === 'boolean') {\n        return false;\n    }\n    if (response.status >= 400) {\n        return networkErrorHandler(response);\n    }\n    const result = await response.text();\n    const resultArray = result.split('\\r\\n');\n    return resultArray.find((entry) => {\n        const passwordHasPart = entry.split(':')[0];\n        return passwordHasPart === suffix;\n    });\n};\n//# sourceMappingURL=haveIBeenPwned.js.map"],"names":["isNodeJs","process","release","name","textEncode","text","utf8","decodeURI","encodeURIComponent","result","Uint8Array","length","i","charCodeAt","TextEncoder","encode","error","Error","digestMessage","message","data","hash","crypto","require","createHash","update","digest","toUpperCase","hashBuffer","subtle","hashArray","Array","from","map","b","toString","padStart","join","pwnedUrl","defaultNetworkErrorHandler","_error","password","universalFetch","url","networkErrorHandler","passwordHash","range","slice","suffix","response","method","headers","catch","status","resultArray","split","find","entry","passwordHasPart"],"mappings":"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"}