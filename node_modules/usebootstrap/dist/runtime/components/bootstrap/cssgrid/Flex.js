import { hProps, addClassNames } from "../../../composables/utils/useProps.js";
import { useBlock, BlockProps } from "../../../composables/base/useBlock.js";
import { defineComponent, h, computed } from "#imports";
export default defineComponent({
  name: "Flex",
  props: {
    ...BlockProps,
    tag: {
      type: String,
      default: "div"
    },
    flex: {
      type: [Boolean, String, Array],
      default: true
    },
    direction: {
      type: [String, Array]
      // {breakPoint}-{row|column}-{reverse}
    },
    wrap: {
      type: String
      //
    }
  },
  setup(props, context) {
    const block = useBlock(props);
    const current = {
      class: computed(() => {
        return {
          ...addClassNames(props.direction, (n) => `flex-${n}`),
          ...addClassNames(props.wrap, (n) => `flex-${n}`)
        };
      })
    };
    return () => h(props.tag, hProps(block, current), context.slots);
  }
});
