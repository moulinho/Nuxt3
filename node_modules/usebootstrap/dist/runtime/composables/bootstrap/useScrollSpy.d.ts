import type { Ref, SetupContext } from 'vue';
import type { IIDProps } from '../attributes/useID.js';
export declare const ScrollSpyProps: {
    spy: {
        type: StringConstructor;
    };
};
export interface IScrollSpyProps {
    spy?: string;
}
interface IProps extends IScrollSpyProps, IIDProps {
}
export declare function useScrollSpy<P extends IProps>(props: P, context: SetupContext<Record<string, unknown>>, elementRef: Ref<HTMLElement | undefined>): {
    method?: undefined;
    attr?: undefined;
} | {
    method: Record<string, (...args: unknown[]) => unknown> & {
        refresh: import("@vueuse/shared").PromisifyFn<() => void>;
        registerItem: (id: string) => Promise<void>;
    };
    attr: import("vue").ComputedRef<{
        'data-debug-spy-current': string;
    }>;
};
export {};
