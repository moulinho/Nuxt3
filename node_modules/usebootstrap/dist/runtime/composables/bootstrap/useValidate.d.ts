import type { Ref } from 'vue';
import type { IInlineProps } from '../../composables/base/useInline.js';
export declare const ValidateProps: {
    novalidate: {
        type: BooleanConstructor;
    };
    wasVlidated: {
        type: BooleanConstructor;
        default: boolean;
    };
};
export interface IValidateionProps extends IInlineProps {
    novalidate?: boolean;
    wasVlidated?: boolean;
}
export declare function useValidate<P extends IValidateionProps>(props: P, elementRef: Ref<HTMLElement | undefined>): {
    class: import("vue").ComputedRef<{
        'was-validated': boolean | undefined;
    }>;
    attr: import("vue").ComputedRef<{
        [x: string]: string | undefined;
    }>;
    event: {
        onSubmit: (event: Event) => void;
    };
};
