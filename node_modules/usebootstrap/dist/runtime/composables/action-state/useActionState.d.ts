import type { IIntegrationProtocolOption } from '../../../useOptions.js';
import { type Ref } from '#imports';
export declare const ActionStateProps: {
    src: {
        type: StringConstructor;
        requird: boolean;
    };
};
export interface IActionStateProps {
    src?: string;
}
export interface IActionState {
    data: Ref<unknown>;
    status: Ref<number>;
    action: ActionFunction;
    executing: Ref<boolean>;
}
export type ActionFunction = (method: string, params: unknown, status: Ref<number>, data: Ref<unknown>) => Promise<void>;
export interface IActionProp {
    src: string;
    key: string;
    option: IIntegrationProtocolOption;
    type: string;
    url: string;
    srcPath: string[];
}
export interface IActionStateHelperProps {
    method: string;
    params: unknown;
    status: Ref<number>;
    data: Ref<unknown>;
}
export declare function useActionState<P extends IActionStateProps>(props: P): IActionState;
