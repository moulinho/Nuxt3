import { defineNuxtModule, createResolver, installModule, addComponent, addPlugin } from '@nuxt/kit';
import { defu } from 'defu';
import { pickBy, forOwn, get, castArray } from 'lodash-es';
import { presetUno } from 'unocss';
import { presetExtra } from 'unocss-preset-extra';

const selectComponents = (category) => {
  return pickBy(components, (component) => component.category && component.category === category);
};
const getComponent = (name) => {
  return components[name];
};
const components = {
  Accordion: {
    path: "./runtime/components/bootstrap/accordion/Accordion",
    category: "bootstrap",
    examples: {
      test: {
        items: [
          {
            component: "AccordionSection",
            text: "AccordionSection",
            attrs: {
              title: "AccordionSection #1"
            }
          }
        ]
      }
    },
    props: {
      parent: {
        type: Boolean,
        default: false
      },
      color: {
        type: String,
        default: void 0
      },
      activeColor: {
        type: String,
        default: void 0
      },
      activeBackgroundColor: {
        type: String,
        default: void 0
      },
      activeButtonColor: {
        type: String,
        default: void 0
      },
      buttonIconWidth: {
        type: String,
        default: void 0
      },
      backgroundColor: {
        type: String,
        default: void 0
      }
    }
  },
  AccordionBody: {
    path: "./runtime/components/bootstrap/accordion/AccordionBody",
    category: "bootstrap",
    spec: {
      parents: ["Accordion"]
    }
  },
  AccordionButton: {
    path: "./runtime/components/bootstrap/accordion/AccordionButton",
    category: "bootstrap",
    spec: {
      parents: ["Accordion"]
    }
  },
  AccordionCollapse: {
    path: "./runtime/components/bootstrap/accordion/AccordionCollapse",
    category: "bootstrap",
    spec: {
      parents: ["Accordion"]
    }
  },
  AccordionHeader: {
    path: "./runtime/components/bootstrap/accordion/AccordionHeader",
    category: "bootstrap",
    spec: {
      parents: ["Accordion"]
    }
  },
  AccordionItem: {
    path: "./runtime/components/bootstrap/accordion/AccordionItem",
    category: "bootstrap",
    spec: {
      parents: ["Accordion"]
    }
  },
  AccordionSection: {
    path: "./runtime/components/bootstrap/accordion/AccordionSection.vue",
    category: "bootstrap",
    spec: {
      parents: ["Accordion"]
    }
  },
  Alert: {
    path: "./runtime/components/bootstrap/alert/Alert",
    category: "bootstrap",
    examples: {
      test: {
        text: "Alert"
      }
    }
  },
  AlertHeading: {
    path: "./runtime/components/bootstrap/alert/AlertHeading",
    category: "bootstrap",
    spec: {
      parents: ["Alert"]
    }
  },
  AlertLink: {
    path: "./runtime/components/bootstrap/alert/AlertLink.vue",
    category: "bootstrap",
    spec: {
      parents: ["Alert"]
    }
  },
  Backdrop: {
    path: "./runtime/components/bootstrap/backdrop/Backdrop",
    category: "bootstrap",
    spec: {
      parents: ["Offcanvas", "Modal"]
    }
  },
  Badge: {
    path: "./runtime/components/bootstrap/badge/Badge",
    category: "bootstrap",
    examples: {
      test: {
        text: "Badge"
      }
    }
  },
  Breadcrumb: {
    path: "./runtime/components/bootstrap/breadcrumb/Breadcrumb",
    category: "bootstrap",
    examples: {
      test: {
        items: [
          {
            component: "BreadcrumbItem",
            text: "BreadcrumbItem 1"
          },
          {
            component: "BreadcrumbItem",
            text: "BreadcrumbItem 2"
          }
        ]
      }
    }
  },
  BreadcrumbItem: {
    path: "./runtime/components/bootstrap/breadcrumb/BreadcrumbItem.vue",
    category: "bootstrap",
    spec: {
      parents: ["Breadcrumb"]
    }
  },
  ButtonGroup: {
    path: "./runtime/components/bootstrap/button/ButtonGroup",
    category: "bootstrap"
  },
  ButtonToolbar: {
    path: "./runtime/components/bootstrap/button/ButtonToolbar",
    category: "bootstrap"
  },
  CheckboxToggleButton: {
    path: "./runtime/components/bootstrap/button/CheckboxToggleButton",
    category: "bootstrap"
  },
  CloseButton: {
    path: "./runtime/components/bootstrap/button/CloseButton",
    category: "bootstrap"
  },
  RadioToggleButton: {
    path: "./runtime/components/bootstrap/button/RadioToggleButton",
    category: "bootstrap"
  },
  Card: {
    path: "./runtime/components/bootstrap/card/Card",
    category: "bootstrap"
  },
  CardBody: {
    path: "./runtime/components/bootstrap/card/CardBody",
    category: "bootstrap",
    spec: {
      parents: ["Card"]
    }
  },
  CardFooter: {
    path: "./runtime/components/bootstrap/card/CardFooter",
    category: "bootstrap",
    spec: {
      parents: ["Card"]
    }
  },
  CardGroup: {
    path: "./runtime/components/bootstrap/card/CardGroup",
    category: "bootstrap"
  },
  CardHeader: {
    path: "./runtime/components/bootstrap/card/CardHeader",
    category: "bootstrap",
    spec: {
      parents: ["Card"]
    }
  },
  CardImg: {
    path: "./runtime/components/bootstrap/card/CardImg",
    category: "bootstrap",
    spec: {
      parents: ["Card"]
    }
  },
  CardImgBottom: {
    path: "./runtime/components/bootstrap/card/CardImgBottom",
    category: "bootstrap",
    spec: {
      parents: ["Card"]
    }
  },
  CardImgOverlay: {
    path: "./runtime/components/bootstrap/card/CardImgOverlay",
    category: "bootstrap",
    spec: {
      parents: ["Card"]
    }
  },
  CardImgTop: {
    path: "./runtime/components/bootstrap/card/CardImgTop",
    category: "bootstrap",
    spec: {
      parents: ["Card"]
    }
  },
  CardLink: {
    path: "./runtime/components/bootstrap/card/CardLink.vue",
    category: "bootstrap",
    spec: {
      parents: ["CardBody", "CardFooter", "CardHeader"]
    }
  },
  CardSubTitle: {
    path: "./runtime/components/bootstrap/card/CardSubTitle",
    category: "bootstrap",
    spec: {
      parents: ["CardBody", "CardFooter", "CardHeader"]
    }
  },
  CardText: {
    path: "./runtime/components/bootstrap/card/CardText",
    category: "bootstrap",
    spec: {
      parents: ["CardBody", "CardFooter", "CardHeader"]
    }
  },
  CardTitle: {
    path: "./runtime/components/bootstrap/card/CardTitle",
    category: "bootstrap",
    spec: {
      parents: ["CardBody", "CardFooter", "CardHeader"]
    }
  },
  Carousel: {
    path: "./runtime/components/bootstrap/carousel/Carousel",
    category: "bootstrap"
  },
  CarouselCaption: {
    path: "./runtime/components/bootstrap/carousel/CarouselCaption",
    category: "bootstrap",
    spec: {
      parents: ["CarouselItem"]
    }
  },
  CarouselInner: {
    path: "./runtime/components/bootstrap/carousel/CarouselInner",
    category: "bootstrap",
    spec: {
      parents: ["Carousel"]
    }
  },
  CarouselItem: {
    path: "./runtime/components/bootstrap/carousel/CarouselItem",
    category: "bootstrap",
    spec: {
      parents: ["CarouselInner"]
    }
  },
  CarouselItemImage: {
    path: "./runtime/components/bootstrap/carousel/CarouselItemImage",
    category: "bootstrap",
    spec: {
      parents: ["CarouselItem"]
    }
  },
  Collapse: {
    path: "./runtime/components/bootstrap/collapse/Collapse",
    category: "bootstrap"
  },
  CollapseButton: {
    path: "./runtime/components/bootstrap/collapse/CollapseButton",
    category: "bootstrap"
  },
  Flex: {
    path: "./runtime/components/bootstrap/cssgrid/Flex",
    category: "bootstrap"
  },
  FlexItem: {
    path: "./runtime/components/bootstrap/cssgrid/FlexItem",
    category: "bootstrap"
  },
  Grid: {
    path: "./runtime/components/bootstrap/cssgrid/Grid",
    category: "bootstrap"
  },
  GridCol: {
    path: "./runtime/components/bootstrap/cssgrid/GridCol",
    category: "bootstrap"
  },
  Dropdown: {
    path: "./runtime/components/bootstrap/dropdown/Dropdown",
    category: "bootstrap"
  },
  DropdownItem: {
    path: "./runtime/components/bootstrap/dropdown/DropdownItem.vue",
    category: "bootstrap"
  },
  DropdownItemDivider: {
    path: "./runtime/components/bootstrap/dropdown/DropdownItemDivider",
    category: "bootstrap"
  },
  DropdownItemText: {
    path: "./runtime/components/bootstrap/dropdown/DropdownItemText",
    category: "bootstrap"
  },
  DropdownMenu: {
    path: "./runtime/components/bootstrap/dropdown/DropdownMenu",
    category: "bootstrap"
  },
  DropdownToggle: {
    path: "./runtime/components/bootstrap/dropdown/DropdownToggle",
    category: "bootstrap"
  },
  DropdownToggleSplit: {
    path: "./runtime/components/bootstrap/dropdown/DropdownToggleSplit",
    category: "bootstrap"
  },
  Col: {
    path: "./runtime/components/bootstrap/grid/Col",
    category: "bootstrap"
  },
  Container: {
    path: "./runtime/components/bootstrap/grid/Container",
    category: "bootstrap"
  },
  Row: {
    path: "./runtime/components/bootstrap/grid/Row",
    category: "bootstrap"
  },
  ListGroup: {
    path: "./runtime/components/bootstrap/list-group/ListGroup",
    category: "bootstrap"
  },
  ListGroupItem: {
    path: "./runtime/components/bootstrap/list-group/ListGroupItem",
    category: "bootstrap"
  },
  ListGroupItemAction: {
    path: "./runtime/components/bootstrap/list-group/ListGroupItemAction.vue",
    category: "bootstrap"
  },
  ListGroupItemLabel: {
    path: "./runtime/components/bootstrap/list-group/ListGroupItemLabel",
    category: "bootstrap"
  },
  ListGroupList: {
    path: "./runtime/components/bootstrap/list-group/ListGroupList",
    category: "bootstrap"
  },
  Modal: {
    path: "./runtime/components/bootstrap/modal/Modal",
    category: "bootstrap"
  },
  ModalBody: {
    path: "./runtime/components/bootstrap/modal/ModalBody",
    category: "bootstrap"
  },
  ModalContent: {
    path: "./runtime/components/bootstrap/modal/ModalContent",
    category: "bootstrap"
  },
  ModalDialog: {
    path: "./runtime/components/bootstrap/modal/ModalDialog",
    category: "bootstrap"
  },
  ModalFooter: {
    path: "./runtime/components/bootstrap/modal/ModalFooter",
    category: "bootstrap"
  },
  ModalHeader: {
    path: "./runtime/components/bootstrap/modal/ModalHeader",
    category: "bootstrap"
  },
  ModalTitle: {
    path: "./runtime/components/bootstrap/modal/ModalTitle",
    category: "bootstrap"
  },
  ModalToggleButton: {
    path: "./runtime/components/bootstrap/modal/ModalToggleButton",
    category: "bootstrap"
  },
  Nav: {
    path: "./runtime/components/bootstrap/nav/Nav",
    category: "bootstrap"
  },
  NavItem: {
    path: "./runtime/components/bootstrap/nav/NavItem",
    category: "bootstrap"
  },
  NavItemDropdown: {
    path: "./runtime/components/bootstrap/nav/NavItemDropdown",
    category: "bootstrap"
  },
  NavItemDropdownToggle: {
    path: "./runtime/components/bootstrap/nav/NavItemDropdownToggle",
    category: "bootstrap"
  },
  NavLink: {
    path: "./runtime/components/bootstrap/nav/NavLink.vue",
    category: "bootstrap"
  },
  NavList: {
    path: "./runtime/components/bootstrap/nav/NavList",
    category: "bootstrap"
  },
  TabContent: {
    path: "./runtime/components/bootstrap/nav/TabContent",
    category: "bootstrap"
  },
  TabPane: {
    path: "./runtime/components/bootstrap/nav/TabPane",
    category: "bootstrap"
  },
  Navbar: {
    path: "./runtime/components/bootstrap/navbar/Navbar",
    category: "bootstrap"
  },
  NavbarBrand: {
    path: "./runtime/components/bootstrap/navbar/NavbarBrand",
    category: "bootstrap"
  },
  NavbarCollapse: {
    path: "./runtime/components/bootstrap/navbar/NavbarCollapse",
    category: "bootstrap"
  },
  NavbarNav: {
    path: "./runtime/components/bootstrap/navbar/NavbarNav",
    category: "bootstrap"
  },
  NavbarNavList: {
    path: "./runtime/components/bootstrap/navbar/NavbarNavList",
    category: "bootstrap"
  },
  NavbarText: {
    path: "./runtime/components/bootstrap/navbar/NavbarText",
    category: "bootstrap"
  },
  NavbarToggler: {
    path: "./runtime/components/bootstrap/navbar/NavbarToggler",
    category: "bootstrap"
  },
  Offcanvas: {
    path: "./runtime/components/bootstrap/offcanvas/Offcanvas",
    category: "bootstrap"
  },
  OffcanvasBody: {
    path: "./runtime/components/bootstrap/offcanvas/OffcanvasBody",
    category: "bootstrap"
  },
  OffcanvasHeader: {
    path: "./runtime/components/bootstrap/offcanvas/OffcanvasHeader",
    category: "bootstrap"
  },
  OffcanvasTitle: {
    path: "./runtime/components/bootstrap/offcanvas/OffcanvasTitle",
    category: "bootstrap"
  },
  PageItem: {
    path: "./runtime/components/bootstrap/pagination/PageItem",
    category: "bootstrap"
  },
  PageLink: {
    path: "./runtime/components/bootstrap/pagination/PageLink",
    category: "bootstrap"
  },
  Pagination: {
    path: "./runtime/components/bootstrap/pagination/Pagination",
    category: "bootstrap"
  },
  Progress: {
    path: "./runtime/components/bootstrap/progress/Progress",
    category: "bootstrap"
  },
  ProgressBar: {
    path: "./runtime/components/bootstrap/progress/ProgressBar",
    category: "bootstrap"
  },
  Spinner: {
    path: "./runtime/components/bootstrap/spinner/Spinner",
    category: "bootstrap"
  },
  Toast: {
    path: "./runtime/components/bootstrap/toast/Toast",
    category: "bootstrap"
  },
  ToastBody: {
    path: "./runtime/components/bootstrap/toast/ToastBody",
    category: "bootstrap"
  },
  ToastContainer: {
    path: "./runtime/components/bootstrap/toast/ToastContainer",
    category: "bootstrap"
  },
  ToastHeader: {
    path: "./runtime/components/bootstrap/toast/ToastHeader",
    category: "bootstrap"
  },
  Vr: {
    path: "./runtime/components/bootstrap/vertical-rule/VerticalRule",
    category: "bootstrap"
  },
  Avatar: {
    path: "./runtime/components/extend/avatar/Avatar",
    category: "extend",
    props: {
      circle: {
        type: Boolean,
        default: false
      },
      size: {
        type: String,
        default: ""
      },
      imgSrc: {
        type: String,
        default: ""
      },
      imgAlt: {
        type: String,
        default: ""
      },
      initials: {
        type: String,
        default: ""
      },
      color: {
        type: String,
        default: ""
      },
      status: {
        type: [Boolean, String],
        default: false
      },
      statusColor: {
        type: String,
        default: ""
      },
      icon: {
        type: String,
        default: ""
      },
      divider: {
        type: [Boolean, String],
        default: false
      },
      objectFit: {
        type: [String]
      }
    }
  },
  BackToTop: {
    path: "./runtime/components/extend/back-to-top/BackToTop.vue",
    category: "extend"
  },
  Background: {
    path: "./runtime/components/extend/background/Background.vue",
    category: "extend"
  },
  Calendar: {
    path: "./runtime/components/extend/calendar/Calendar.vue",
    category: "extend"
  },
  DatePicker: {
    path: "./runtime/components/extend/calendar/DatePicker.vue",
    category: "extend"
  },
  CodeHighlighter: {
    path: "./runtime/components/extend/code/CodeHighlighter.vue",
    category: "extend"
  },
  EventViewer: {
    path: "./runtime/components/extend/code/EventViewer.vue",
    category: "extend"
  },
  ColorModeNavItemDropdown: {
    path: "./runtime/components/extend/color-mode/ColorModeNavItemDropdown.vue",
    category: "extend"
  },
  // "Divider": {
  //  path: "./runtime/components/extend/divider/Divider.vue",
  //  category: "extend",
  // },
  // "HTVDivider": {
  //  path: "./runtime/components/extend/divider/HTVDivider.vue",
  //  category: "extend",
  // },
  ResponsiveRule: {
    path: "./runtime/components/extend/divider/ResponsiveRule.vue",
    category: "extend"
  },
  LocaleNavItemDropdown: {
    path: "./runtime/components/extend/dynamic-route/LocaleNavItemDropdown.vue",
    category: "extend"
  },
  Localization: {
    path: "./runtime/components/extend/dynamic-route/Localization.vue",
    category: "extend"
  },
  BarChart: {
    path: "./runtime/components/extend/echart/BarChart.vue",
    category: "extend"
  },
  LineChart: {
    path: "./runtime/components/extend/echart/LineChart.vue",
    category: "extend"
  },
  PieChart: {
    path: "./runtime/components/extend/echart/PieChart.vue",
    category: "extend"
  },
  Fixed: {
    path: "./runtime/components/extend/fixed/Fixed.vue",
    category: "extend"
  },
  GridArea: {
    path: "./runtime/components/extend/grid-template/GridArea",
    category: "extend",
    spec: {
      parents: ["GridTemplate"]
    }
  },
  GridTemplate: {
    path: "./runtime/components/extend/grid-template/GridTemplate.vue",
    category: "extend",
    spec: {
      layout: true
    }
  },
  HeadingBlock: {
    path: "./runtime/components/extend/heading/HeadingBlock.vue",
    category: "extend"
  },
  HeroRow: {
    path: "./runtime/components/extend/hero-row/HeroRow.vue",
    category: "extend"
  },
  IconBox: {
    path: "./runtime/components/extend/icon-box/IconBox",
    category: "extend"
  },
  Intro: {
    path: "./runtime/components/extend/intro/Intro.vue",
    category: "extend"
  },
  JsonView: {
    path: "./runtime/components/extend/json-view/JsonView.vue",
    category: "extend"
  },
  PageLayout: {
    path: "./runtime/components/extend/layout/PageLayout.vue",
    category: "extend"
  },
  FloatingNavbar: {
    path: "./runtime/components/extend/navbar/FloatingNavbar.vue",
    category: "extend"
  },
  SlideNavbar: {
    path: "./runtime/components/extend/navbar/SlideNavbar.vue",
    category: "extend"
  },
  StickyToggleNavbar: {
    path: "./runtime/components/extend/navbar/StickyToggleNavbar.vue",
    category: "extend"
  },
  PasswordStrength: {
    path: "./runtime/components/extend/password-strength/PasswordStrength.vue",
    category: "extend"
  },
  Paper: {
    path: "./runtime/components/extend/paper/Paper.vue",
    category: "extend"
  },
  Rating: {
    path: "./runtime/components/extend/rating/Rating.vue",
    category: "extend"
  },
  Sidebar: {
    path: "./runtime/components/extend/sidebar/Sidebar.vue",
    category: "extend"
  },
  Sortable: {
    path: "./runtime/components/extend/sortable/Sortable.vue",
    category: "extend",
    spec: {
      parents: ["ListGroupList"]
    }
  },
  ComponentsCatalog: {
    path: "./runtime/components/spec/ComponentsCatalog.vue",
    category: "spec"
  },
  UseBootstrap: {
    path: "./runtime/components/spec/UseBootstrap.vue",
    category: "spec"
  },
  SpecBinding: {
    path: "./runtime/components/spec/SpecBinding.vue",
    category: "spec"
  },
  StackGroup: {
    path: "./runtime/components/extend/stack-group/StackGroup.vue",
    category: "extend"
  },
  StackGroupItem: {
    path: "./runtime/components/extend/stack-group/StackGroupItem.vue",
    category: "extend"
  },
  StatusIndicator: {
    path: "./runtime/components/extend/status-indicator/StatusIndicator",
    category: "extend"
  },
  Step: {
    path: "./runtime/components/extend/step/Step.vue",
    category: "extend"
  },
  StepItem: {
    path: "./runtime/components/extend/step/StepItem.vue",
    category: "extend"
  },
  Swiper: {
    path: "./runtime/components/extend/swiper/Swiper.vue",
    category: "extend"
  },
  TiptapEditor: {
    path: "./runtime/components/extend/tiptap/TiptapEditor.vue",
    category: "extend"
  },
  CollapseToc: {
    path: "./runtime/components/extend/toc/CollapseToc.vue",
    category: "extend"
  },
  Toc: {
    path: "./runtime/components/extend/toc/Toc.vue",
    category: "extend"
  },
  Typed: {
    path: "./runtime/components/extend/typed/Typed",
    category: "extend",
    examples: {
      test: {
        attrs: {
          strings: ["Hello", "World"]
        }
      }
    }
  },
  Blockquote: {
    path: "./runtime/components/html-block/blockquote/Blockquote",
    category: "html"
  },
  BlockquoteFigure: {
    path: "./runtime/components/html-block/blockquote/BlockquoteFigure",
    category: "html"
  },
  BlockquoteFooter: {
    path: "./runtime/components/html-block/blockquote/BlockquoteFooter",
    category: "html"
  },
  Figure: {
    path: "./runtime/components/html-block/figure/Figure",
    category: "html"
  },
  FigureCaption: {
    path: "./runtime/components/html-block/figure/FigureCaption",
    category: "html"
  },
  FigureImage: {
    path: "./runtime/components/html-block/figure/FigureImage",
    category: "html"
  },
  ColFormLabel: {
    path: "./runtime/components/html-block/form/ColFormLabel",
    category: "html"
  },
  ColFormLegend: {
    path: "./runtime/components/html-block/form/ColFormLegend",
    category: "html"
  },
  Datalist: {
    path: "./runtime/components/html-block/form/Datalist",
    category: "html"
  },
  Fieldset: {
    path: "./runtime/components/html-block/form/Fieldset",
    category: "html"
  },
  Form: {
    path: "./runtime/components/html-block/form/Form",
    category: "html"
  },
  FormCheck: {
    path: "./runtime/components/html-block/form/FormCheck",
    category: "html"
  },
  FormCheckInput: {
    path: "./runtime/components/html-block/form/FormCheckInput.vue",
    category: "html"
  },
  FormCheckLabel: {
    path: "./runtime/components/html-block/form/FormCheckLabel",
    category: "html"
  },
  FormColor: {
    path: "./runtime/components/html-block/form/FormColor.vue",
    category: "html"
  },
  FormControl: {
    path: "./runtime/components/html-block/form/FormControl",
    category: "html"
  },
  FormFile: {
    path: "./runtime/components/html-block/form/FormFile.vue",
    category: "html"
  },
  FormFloating: {
    path: "./runtime/components/html-block/form/FormFloating",
    category: "html"
  },
  FormInput: {
    path: "./runtime/components/html-block/form/FormInput.vue",
    category: "html"
  },
  FormLabel: {
    path: "./runtime/components/html-block/form/FormLabel",
    category: "html"
  },
  FormRange: {
    path: "./runtime/components/html-block/form/FormRange.vue",
    category: "html"
  },
  FormSelect: {
    path: "./runtime/components/html-block/form/FormSelect.vue",
    category: "html"
  },
  FormSwitch: {
    path: "./runtime/components/html-block/form/FormSwitch",
    category: "html"
  },
  FormText: {
    path: "./runtime/components/html-block/form/FormText",
    category: "html"
  },
  FormTextarea: {
    path: "./runtime/components/html-block/form/FormTextarea.vue",
    category: "html"
  },
  InputGroup: {
    path: "./runtime/components/html-block/form/InputGroup",
    category: "html"
  },
  InputGroupText: {
    path: "./runtime/components/html-block/form/InputGroupText",
    category: "html"
  },
  Label: {
    path: "./runtime/components/html-block/form/Label",
    category: "html"
  },
  Legend: {
    path: "./runtime/components/html-block/form/Legend",
    category: "html"
  },
  Option: {
    path: "./runtime/components/html-block/form/Option",
    category: "html"
  },
  ValidFeedback: {
    path: "./runtime/components/html-block/form/ValidFeedback.vue",
    category: "html"
  },
  ValidTooltip: {
    path: "./runtime/components/html-block/form/ValidTooltip.vue",
    category: "html"
  },
  Block: {
    path: "./runtime/components/html-block/Block",
    category: "html"
  },
  Dd: {
    path: "./runtime/components/html-block/DefinitionDescription",
    category: "html"
  },
  Dl: {
    path: "./runtime/components/html-block/DefinitionList",
    category: "html"
  },
  Dt: {
    path: "./runtime/components/html-block/DefinitionTerm",
    category: "html"
  },
  Div: {
    path: "./runtime/components/html-block/Div",
    category: "html"
  },
  Footer: {
    path: "./runtime/components/html-block/Footer",
    category: "html"
  },
  Hr: {
    path: "./runtime/components/html-block/Hr",
    category: "html"
  },
  Img: {
    path: "./runtime/components/html-block/Image",
    category: "html"
  },
  Image: {
    alias: "Img",
    category: "extend"
  },
  Input: {
    path: "./runtime/components/html-block/HtmlInput.vue",
    category: "html"
  },
  Ul: {
    path: "./runtime/components/html-block/List",
    category: "html"
  },
  List: {
    alias: "Ul",
    category: "extend"
  },
  Li: {
    path: "./runtime/components/html-block/ListItem.vue",
    category: "html"
  },
  ListItem: {
    alias: "Li",
    category: "extend"
  },
  Main: {
    path: "./runtime/components/html-block/Main",
    category: "html"
  },
  Ol: {
    path: "./runtime/components/html-block/OrderedList",
    category: "html"
  },
  P: {
    path: "./runtime/components/html-block/Paragraph",
    category: "html"
  },
  Paragraph: {
    alias: "P",
    category: "extend"
  },
  Picture: {
    path: "./runtime/components/html-block/Picture",
    category: "html"
  },
  Select: {
    path: "./runtime/components/html-block/Select.vue",
    category: "html"
  },
  Textarea: {
    path: "./runtime/components/html-block/Textarea.vue",
    category: "html"
  },
  A: {
    path: "./runtime/components/html-inline/Anchor",
    category: "html"
  },
  Anchor: {
    alias: "A",
    category: "extend"
  },
  Button: {
    path: "./runtime/components/html-inline/Button",
    category: "html"
  },
  H1: {
    path: "./runtime/components/html-inline/H1",
    category: "html"
  },
  H2: {
    path: "./runtime/components/html-inline/H2",
    category: "html"
  },
  H3: {
    path: "./runtime/components/html-inline/H3",
    category: "html"
  },
  H4: {
    path: "./runtime/components/html-inline/H4",
    category: "html"
  },
  H5: {
    path: "./runtime/components/html-inline/H5",
    category: "html"
  },
  H6: {
    path: "./runtime/components/html-inline/H6",
    category: "html"
  },
  H: {
    path: "./runtime/components/html-inline/Headings",
    category: "html"
  },
  Headings: {
    alias: "H",
    category: "extend"
  },
  Span: {
    path: "./runtime/components/html-inline/Inline",
    category: "html"
  },
  Inline: {
    alias: "Span",
    category: "extend"
  },
  Small: {
    path: "./runtime/components/html-inline/Small",
    category: "html"
  },
  Strong: {
    path: "./runtime/components/html-inline/Strong",
    category: "html"
  },
  Caption: {
    path: "./runtime/components/html-table/Caption",
    category: "html"
  },
  Table: {
    path: "./runtime/components/html-table/Table",
    category: "html"
  },
  Tbody: {
    path: "./runtime/components/html-table/Tbody",
    category: "html"
  },
  Td: {
    path: "./runtime/components/html-table/Td",
    category: "html"
  },
  Tfoot: {
    path: "./runtime/components/html-table/Tfoot",
    category: "html"
  },
  Th: {
    path: "./runtime/components/html-table/Th",
    category: "html"
  },
  Thead: {
    path: "./runtime/components/html-table/Thead",
    category: "html"
  },
  Tr: {
    path: "./runtime/components/html-table/Tr",
    category: "html"
  },
  Icon: {
    path: "./runtime/components/icon/BIcon",
    category: "icon"
  },
  ActionState: {
    path: "./runtime/components/integration/ActionState.vue",
    category: "integration"
  },
  ArrayQuery: {
    path: "./runtime/components/integration/ArrayQuery.vue",
    category: "integration"
  },
  DataTable: {
    path: "./runtime/components/integration/DataTable.vue",
    category: "integration"
  },
  DataTableBody: {
    path: "./runtime/components/integration/DataTableBody.vue",
    category: "integration"
  },
  DataTableFooter: {
    path: "./runtime/components/integration/DataTableFooter.vue",
    category: "integration"
  },
  DataTableHeader: {
    path: "./runtime/components/integration/DataTableHeader.vue",
    category: "integration"
  },
  DataTableHeaderRowFilter: {
    path: "./runtime/components/integration/DataTableHeaderRowFilter.vue",
    category: "integration"
  },
  DataTableHeaderRowSorter: {
    path: "./runtime/components/integration/DataTableHeaderRowSorter.vue",
    category: "integration"
  },
  FullTextFilter: {
    path: "./runtime/components/integration/FullTextFilter.vue",
    category: "integration"
  },
  ViewState: {
    path: "./runtime/components/integration/ViewState.vue",
    category: "integration",
    examples: {
      test: {
        attrs: {
          src: "query://uid"
        }
      }
    }
  },
  SwiperSlide: {
    export: "SwiperSlide",
    path: "swiper/vue",
    category: "swiper"
  },
  UseWindowSize: {
    export: "UseWindowSize",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseWindowFocus: {
    export: "UseWindowFocus",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseVirtualList: {
    export: "UseVirtualList",
    path: "@vueuse/components",
    category: "vueuse"
  },
  UseTimestamp: {
    export: "UseTimestamp",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseTimeAgo: {
    export: "UseTimeAgo",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseScreenSafeArea: {
    export: "UseScreenSafeArea",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UsePreferredReducedMotion: {
    export: "UsePreferredReducedMotion",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UsePreferredLanguages: {
    export: "UsePreferredLanguages",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UsePreferredDark: {
    export: "UsePreferredDark",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UsePreferredContrast: {
    export: "UsePreferredContrast",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UsePreferredColorScheme: {
    export: "UsePreferredColorScheme",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UsePointerLock: {
    export: "UsePointerLock",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UsePointer: {
    export: "UsePointer",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UsePageLeave: {
    export: "UsePageLeave",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseOnline: {
    export: "UseOnline",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseOffsetPagination: {
    export: "UseOffsetPagination",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseObjectUrl: {
    export: "UseObjectUrl",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseNow: {
    export: "UseNow",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseNetwork: {
    export: "UseNetwork",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseMousePressed: {
    export: "UseMousePressed",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseMouseInElement: {
    export: "UseMouseInElement",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseIdle: {
    export: "UseIdle",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseGeolocation: {
    export: "UseGeolocation",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseFullscreen: {
    export: "UseFullscreen",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseEyeDropper: {
    export: "UseEyeDropper",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseElementVisibility: {
    export: "UseElementVisibility",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseElementSize: {
    export: "UseElementSize",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseElementBounding: {
    export: "UseElementBounding",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseDraggable: {
    export: "UseDraggable",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseDocumentVisibility: {
    export: "UseDocumentVisibility",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseDevicesList: {
    export: "UseDevicesList",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseDevicePixelRatio: {
    export: "UseDevicePixelRatio",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseDeviceOrientation: {
    export: "UseDeviceOrientation",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseDeviceMotion: {
    export: "UseDeviceMotion",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseClipboard: {
    export: "UseClipboard",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseBattery: {
    export: "UseBattery",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  UseActiveElement: {
    export: "UseActiveElement",
    path: "@vueuse/components",
    category: "vueuse"
    // mode: "client",
  },
  OnClickOutside: {
    export: "OnClickOutside",
    path: "@vueuse/components",
    category: "vueuse",
    mode: "client"
  }
};

const selectPlugins = (category) => {
  return plugins.filter((item) => {
    return item.category == category;
  });
};
const plugins = [
  {
    path: "runtime/plugins/static",
    category: "static"
  },
  {
    path: "runtime/plugins/vueuse",
    category: "vueuse"
  },
  {
    path: "runtime/plugins/shiki",
    category: "shiki"
  },
  {
    path: "runtime/plugins/bootstrap",
    category: "bootstrap"
  },
  {
    path: "runtime/plugins/seometa",
    category: "bootstrap"
  },
  {
    path: "runtime/plugins/localization",
    category: "bootstrap"
  },
  {
    path: "runtime/plugins/breakpoint",
    category: "bootstrap"
  }
];

const unocssConfig = {
  presets: [
    presetUno({ prefix: `un-` }),
    presetExtra()
  ],
  components: false,
  // attributify: {
  //   prefix: `un-`,
  //   prefixedOnly: true,
  // },
  uno: {
    prefix: `un-`
    // Container などを除外するためPrefixが必要
  },
  extra: true,
  // https://getbootstrap.jp/docs/5.3/customize/css-variables/
  // https://github.com/unocss/unocss/tree/main/packages/preset-mini/src/_theme
  theme: {
    breakpoints: {
      sm: "576px",
      md: "768px",
      lg: "992px",
      xl: "1200px",
      xxl: "1400px"
    },
    colors: {
      // Colors
      "blue": "var(--bs-blue)",
      "blue-100": "var(--bs-blue-100)",
      "blue-200": "var(--bs-blue-200)",
      "blue-300": "var(--bs-blue-300)",
      "blue-400": "var(--bs-blue-400)",
      "blue-500": "var(--bs-blue-500)",
      "blue-600": "var(--bs-blue-600)",
      "blue-700": "var(--bs-blue-700)",
      "blue-800": "var(--bs-blue-800)",
      "blue-900": "var(--bs-blue-900)",
      "contrast-blue": "var(--bs-contrast-blue)",
      "contrast-blue-100": "var(--bs-contrast-blue-100)",
      "contrast-blue-200": "var(--bs-contrast-blue-200)",
      "contrast-blue-300": "var(--bs-contrast-blue-300)",
      "contrast-blue-400": "var(--bs-contrast-blue-400)",
      "contrast-blue-500": "var(--bs-contrast-blue-500)",
      "contrast-blue-600": "var(--bs-contrast-blue-600)",
      "contrast-blue-700": "var(--bs-contrast-blue-700)",
      "contrast-blue-800": "var(--bs-contrast-blue-800)",
      "contrast-blue-900": "var(--bs-contrast-blue-900)",
      "indigo": "var(--bs-indigo)",
      "indigo-100": "var(--bs-indigo-100)",
      "indigo-200": "var(--bs-indigo-200)",
      "indigo-300": "var(--bs-indigo-300)",
      "indigo-400": "var(--bs-indigo-400)",
      "indigo-500": "var(--bs-indigo-500)",
      "indigo-600": "var(--bs-indigo-600)",
      "indigo-700": "var(--bs-indigo-700)",
      "indigo-800": "var(--bs-indigo-800)",
      "indigo-900": "var(--bs-indigo-900)",
      "contrast-indigo": "var(--bs-contrast-indigo)",
      "contrast-indigo-100": "var(--bs-contrast-indigo-100)",
      "contrast-indigo-200": "var(--bs-contrast-indigo-200)",
      "contrast-indigo-300": "var(--bs-contrast-indigo-300)",
      "contrast-indigo-400": "var(--bs-contrast-indigo-400)",
      "contrast-indigo-500": "var(--bs-contrast-indigo-500)",
      "contrast-indigo-600": "var(--bs-contrast-indigo-600)",
      "contrast-indigo-700": "var(--bs-contrast-indigo-700)",
      "contrast-indigo-800": "var(--bs-contrast-indigo-800)",
      "contrast-indigo-900": "var(--bs-contrast-indigo-900)",
      "purple": "var(--bs-purple)",
      "purple-100": "var(--bs-purple-100)",
      "purple-200": "var(--bs-purple-200)",
      "purple-300": "var(--bs-purple-300)",
      "purple-400": "var(--bs-purple-400)",
      "purple-500": "var(--bs-purple-500)",
      "purple-600": "var(--bs-purple-600)",
      "purple-700": "var(--bs-purple-700)",
      "purple-800": "var(--bs-purple-800)",
      "purple-900": "var(--bs-purple-900)",
      "contrast-purple": "var(--bs-contrast-purple)",
      "contrast-purple-100": "var(--bs-contrast-purple-100)",
      "contrast-purple-200": "var(--bs-contrast-purple-200)",
      "contrast-purple-300": "var(--bs-contrast-purple-300)",
      "contrast-purple-400": "var(--bs-contrast-purple-400)",
      "contrast-purple-500": "var(--bs-contrast-purple-500)",
      "contrast-purple-600": "var(--bs-contrast-purple-600)",
      "contrast-purple-700": "var(--bs-contrast-purple-700)",
      "contrast-purple-800": "var(--bs-contrast-purple-800)",
      "contrast-purple-900": "var(--bs-contrast-purple-900)",
      "pink": "var(--bs-pink)",
      "pink-100": "var(--bs-pink-100)",
      "pink-200": "var(--bs-pink-200)",
      "pink-300": "var(--bs-pink-300)",
      "pink-400": "var(--bs-pink-400)",
      "pink-500": "var(--bs-pink-500)",
      "pink-600": "var(--bs-pink-600)",
      "pink-700": "var(--bs-pink-700)",
      "pink-800": "var(--bs-pink-800)",
      "pink-900": "var(--bs-pink-900)",
      "contrast-pink": "var(--bs-contrast-pink)",
      "contrast-pink-100": "var(--bs-contrast-pink-100)",
      "contrast-pink-200": "var(--bs-contrast-pink-200)",
      "contrast-pink-300": "var(--bs-contrast-pink-300)",
      "contrast-pink-400": "var(--bs-contrast-pink-400)",
      "contrast-pink-500": "var(--bs-contrast-pink-500)",
      "contrast-pink-600": "var(--bs-contrast-pink-600)",
      "contrast-pink-700": "var(--bs-contrast-pink-700)",
      "contrast-pink-800": "var(--bs-contrast-pink-800)",
      "contrast-pink-900": "var(--bs-contrast-pink-900)",
      "red": "var(--bs-red)",
      "red-100": "var(--bs-red-100)",
      "red-200": "var(--bs-red-200)",
      "red-300": "var(--bs-red-300)",
      "red-400": "var(--bs-red-400)",
      "red-500": "var(--bs-red-500)",
      "red-600": "var(--bs-red-600)",
      "red-700": "var(--bs-red-700)",
      "red-800": "var(--bs-red-800)",
      "red-900": "var(--bs-red-900)",
      "contrast-red": "var(--bs-contrast-red)",
      "contrast-red-100": "var(--bs-contrast-red-100)",
      "contrast-red-200": "var(--bs-contrast-red-200)",
      "contrast-red-300": "var(--bs-contrast-red-300)",
      "contrast-red-400": "var(--bs-contrast-red-400)",
      "contrast-red-500": "var(--bs-contrast-red-500)",
      "contrast-red-600": "var(--bs-contrast-red-600)",
      "contrast-red-700": "var(--bs-contrast-red-700)",
      "contrast-red-800": "var(--bs-contrast-red-800)",
      "contrast-red-900": "var(--bs-contrast-red-900)",
      "orange": "var(--bs-orange)",
      "orange-100": "var(--bs-orange-100)",
      "orange-200": "var(--bs-orange-200)",
      "orange-300": "var(--bs-orange-300)",
      "orange-400": "var(--bs-orange-400)",
      "orange-500": "var(--bs-orange-500)",
      "orange-600": "var(--bs-orange-600)",
      "orange-700": "var(--bs-orange-700)",
      "orange-800": "var(--bs-orange-800)",
      "orange-900": "var(--bs-orange-900)",
      "contrast-orange": "var(--bs-contrast-orange)",
      "contrast-orange-100": "var(--bs-contrast-orange-100)",
      "contrast-orange-200": "var(--bs-contrast-orange-200)",
      "contrast-orange-300": "var(--bs-contrast-orange-300)",
      "contrast-orange-400": "var(--bs-contrast-orange-400)",
      "contrast-orange-500": "var(--bs-contrast-orange-500)",
      "contrast-orange-600": "var(--bs-contrast-orange-600)",
      "contrast-orange-700": "var(--bs-contrast-orange-700)",
      "contrast-orange-800": "var(--bs-contrast-orange-800)",
      "contrast-orange-900": "var(--bs-contrast-orange-900)",
      "green": "var(--bs-green)",
      "green-100": "var(--bs-green-100)",
      "green-200": "var(--bs-green-200)",
      "green-300": "var(--bs-green-300)",
      "green-400": "var(--bs-green-400)",
      "green-500": "var(--bs-green-500)",
      "green-600": "var(--bs-green-600)",
      "green-700": "var(--bs-green-700)",
      "green-800": "var(--bs-green-800)",
      "green-900": "var(--bs-green-900)",
      "contrast-green": "var(--bs-contrast-green)",
      "contrast-green-100": "var(--bs-contrast-green-100)",
      "contrast-green-200": "var(--bs-contrast-green-200)",
      "contrast-green-300": "var(--bs-contrast-green-300)",
      "contrast-green-400": "var(--bs-contrast-green-400)",
      "contrast-green-500": "var(--bs-contrast-green-500)",
      "contrast-green-600": "var(--bs-contrast-green-600)",
      "contrast-green-700": "var(--bs-contrast-green-700)",
      "contrast-green-800": "var(--bs-contrast-green-800)",
      "contrast-green-900": "var(--bs-contrast-green-900)",
      "yellow": "var(--bs-yellow)",
      "yellow-100": "var(--bs-yellow-100)",
      "yellow-200": "var(--bs-yellow-200)",
      "yellow-300": "var(--bs-yellow-300)",
      "yellow-400": "var(--bs-yellow-400)",
      "yellow-500": "var(--bs-yellow-500)",
      "yellow-600": "var(--bs-yellow-600)",
      "yellow-700": "var(--bs-yellow-700)",
      "yellow-800": "var(--bs-yellow-800)",
      "yellow-900": "var(--bs-yellow-900)",
      "contrast-yellow": "var(--bs-contrast-yellow)",
      "contrast-yellow-100": "var(--bs-contrast-yellow-100)",
      "contrast-yellow-200": "var(--bs-contrast-yellow-200)",
      "contrast-yellow-300": "var(--bs-contrast-yellow-300)",
      "contrast-yellow-400": "var(--bs-contrast-yellow-400)",
      "contrast-yellow-500": "var(--bs-contrast-yellow-500)",
      "contrast-yellow-600": "var(--bs-contrast-yellow-600)",
      "contrast-yellow-700": "var(--bs-contrast-yellow-700)",
      "contrast-yellow-800": "var(--bs-contrast-yellow-800)",
      "contrast-yellow-900": "var(--bs-contrast-yellow-900)",
      "teal": "var(--bs-teal)",
      "teal-100": "var(--bs-teal-100)",
      "teal-200": "var(--bs-teal-200)",
      "teal-300": "var(--bs-teal-300)",
      "teal-400": "var(--bs-teal-400)",
      "teal-500": "var(--bs-teal-500)",
      "teal-600": "var(--bs-teal-600)",
      "teal-700": "var(--bs-teal-700)",
      "teal-800": "var(--bs-teal-800)",
      "teal-900": "var(--bs-teal-900)",
      "contrast-teal": "var(--bs-contrast-teal)",
      "contrast-teal-100": "var(--bs-contrast-teal-100)",
      "contrast-teal-200": "var(--bs-contrast-teal-200)",
      "contrast-teal-300": "var(--bs-contrast-teal-300)",
      "contrast-teal-400": "var(--bs-contrast-teal-400)",
      "contrast-teal-500": "var(--bs-contrast-teal-500)",
      "contrast-teal-600": "var(--bs-contrast-teal-600)",
      "contrast-teal-700": "var(--bs-contrast-teal-700)",
      "contrast-teal-800": "var(--bs-contrast-teal-800)",
      "contrast-teal-900": "var(--bs-contrast-teal-900)",
      "cyan": "var(--bs-cyan)",
      "cyan-100": "var(--bs-cyan-100)",
      "cyan-200": "var(--bs-cyan-200)",
      "cyan-300": "var(--bs-cyan-300)",
      "cyan-400": "var(--bs-cyan-400)",
      "cyan-500": "var(--bs-cyan-500)",
      "cyan-600": "var(--bs-cyan-600)",
      "cyan-700": "var(--bs-cyan-700)",
      "cyan-800": "var(--bs-cyan-800)",
      "cyan-900": "var(--bs-cyan-900)",
      "contrast-cyan": "var(--bs-contrast-cyan)",
      "contrast-cyan-100": "var(--bs-contrast-cyan-100)",
      "contrast-cyan-200": "var(--bs-contrast-cyan-200)",
      "contrast-cyan-300": "var(--bs-contrast-cyan-300)",
      "contrast-cyan-400": "var(--bs-contrast-cyan-400)",
      "contrast-cyan-500": "var(--bs-contrast-cyan-500)",
      "contrast-cyan-600": "var(--bs-contrast-cyan-600)",
      "contrast-cyan-700": "var(--bs-contrast-cyan-700)",
      "contrast-cyan-800": "var(--bs-contrast-cyan-800)",
      "contrast-cyan-900": "var(--bs-contrast-cyan-900)",
      "gray-dark": "var(--bs-gray-dark)",
      "gray": "var(--bs-gray)",
      "gray-100": "var(--bs-gray-100)",
      "gray-200": "var(--bs-gray-200)",
      "gray-300": "var(--bs-gray-300)",
      "gray-400": "var(--bs-gray-400)",
      "gray-500": "var(--bs-gray-500)",
      "gray-600": "var(--bs-gray-600)",
      "gray-700": "var(--bs-gray-700)",
      "gray-800": "var(--bs-gray-800)",
      "gray-900": "var(--bs-gray-900)",
      "gray-light": "var(--bs-gray-300)",
      // Theme
      "primary": "var(--bs-primary)",
      "primary-text-emphasis": "var(--bs-primary-text-emphasis)",
      "primary-border-subtle": "var(--bs-primary-border-subtle)",
      "primary-bg-subtle": "var(--bs-primary-bg-subtle)",
      "contrast-primary": "var(--bs-contrast-primary)",
      "contrast-primary-subtle": "var(--bs-contrast-primary-subtle)",
      "secondary": "var(--bs-secondary)",
      "secondary-text-emphasis": "var(--bs-secondary-text-emphasis)",
      "secondary-border-subtle": "var(--bs-secondary-border-subtle)",
      "secondary-bg-subtle": "var(--bs-secondary-bg-subtle)",
      "contrast-secondary": "var(--bs-contrast-primary)",
      "contrast-secondary-subtle": "var(--bs-contrast-secondary-subtle)",
      "success": "var(--bs-success)",
      "success-text-emphasis": "var(--bs-success-text-emphasis)",
      "success-border-subtle": "var(--bs-success-border-subtle)",
      "success-bg-subtle": "var(--bs-success-bg-subtle)",
      "contrast-success": "var(--bs-contrast-success)",
      "contrast-success-subtle": "var(--bs-contrast-success-subtle)",
      "info": "var(--bs-info)",
      "info-text-emphasis": "var(--bs-info-text-emphasis)",
      "info-border-subtle": "var(--bs-info-border-subtle)",
      "info-bg-subtle": "var(--bs-info-bg-subtle)",
      "contrast-info": "var(--bs-contrast-info)",
      "contrast-info-subtle": "var(--bs-contrast-info-subtle)",
      "warning": "var(--bs-warning)",
      "warning-text-emphasis": "var(--bs-warning-text-emphasis)",
      "warning-border-subtle": "var(--bs-warning-border-subtle)",
      "warning-bg-subtle": "var(--bs-warning-bg-subtle)",
      "contrast-warning": "var(--bs-contrast-warning)",
      "contrast-warning-subtle": "var(--bs-contrast-warning-subtle)",
      "danger": "var(--bs-danger)",
      "danger-text-emphasis": "var(--bs-danger-text-emphasis)",
      "danger-border-subtle": "var(--bs-danger-border-subtle)",
      "danger-bg-subtle": "var(--bs-danger-bg-subtle)",
      "contrast-danger": "var(--bs-contrast-danger)",
      "contrast-danger-subtle": "var(--bs-contrast-danger-subtle)",
      //
      "light": "var(--bs-light)",
      "light-text-emphasis": "var(--bs-light-text-emphasis)",
      "light-border-subtle": "var(--bs-light-border-subtle)",
      "light-bg-subtle": "var(--bs-light-bg-subtle)",
      "contrast-light": "var(--bs-contrast-light)",
      "contrast-light-subtle": "var(--bs-contrast-light-subtle)",
      "dark": "var(--bs-dark)",
      "dark-text-emphasis": "var(--bs-dark-text-emphasis)",
      "dark-border-subtle": "var(--bs-dark-border-subtle)",
      "dark-bg-subtle": "var(--bs-dark-bg-subtle)",
      "contrast-dark": "var(--bs-contrast-dark)",
      "contrast-dark-subtle": "var(--bs-contrast-dark-subtle)",
      //
      "body-color": "var(--bs-body-color)",
      "body-bg": "var(--bs-body-bg)",
      "emphasis-color": "var(--bs-contrast-color)",
      "secondary-color": "var(--bs- secondary - color)",
      "secondary-bg": "var(--bs-secondary-bg)",
      "tertiary-color": "var(--bs-tertiary-color)",
      "tertiary-bg": "var(--bs-tertiary-bg)",
      "heading-color": "var(--bs-heading-color)",
      "link-color": "var(--bs-link-color)",
      "link-hover-color": "var(--bs-link-hover-color)",
      "code-color": "var(--bs-code-color)",
      "highlight-bg": "var(--bs-highlight-bg)",
      "border-color": "var(--bs-border-color)",
      "form-valid-color": "var(--bs-form-valid-color)",
      "form-invalid-color": "var(--bs-form-invalid-color)",
      "form-invalid-border-color": "var(--bs-form-invalid-border-color)"
    },
    fontFamily: {
      sans: "var(--bs-font-sans)",
      serif: "var(--bs-font-sans-serif)"
    },
    borderRadius: {
      "DEFAULT": "var(--bs-border-radius)",
      "none": "0",
      "sm": "var(--bs-border-radius-sm)",
      "md": "var(--bs-border-radius)",
      "lg": "var(--bs-border-radius-lg)",
      "xl": "var(--bs-border-radius-xl)",
      "2xl": "var(--bs-border-radius-xxl)"
    },
    spacing: {
      0: "0px",
      1: "0.25rem",
      2: "0.5rem",
      3: "1rem",
      4: "1.5rem",
      5: "3rem",
      6: "4.5rem",
      7: "6rem",
      8: "7.5rem",
      9: "9rem",
      10: "12rem"
    }
  },
  shortcuts: [
    // dynamic shortcuts
    // [/^un-btn-(.*)$/, ([, c]: [any, string]) => `un-bg-${c} un-text-contrast-${c} `],
  ]
};
const modules = {
  icon: {
    module: "@nuxt/icon",
    options: {
      // size: "1em",
      class: "b-icon"
      // mode: 'svg' 2024/7/12 初回レンダリング時に表示されない
    }
  },
  image: {
    module: "@nuxt/image",
    options: {
      quality: 80,
      format: ["webp"],
      screens: {
        sm: 576,
        md: 768,
        lg: 992,
        xl: 1200,
        xxl: 1400
      }
    }
  },
  vueuse: {
    module: "@vueuse/nuxt",
    options: {
      ssrHandlers: true,
      autoImports: true
    }
  },
  fonts: {
    module: "@nuxt/fonts"
  },
  sitemap: {
    module: "@nuxtjs/sitemap"
  },
  robots: {
    // 問題が発生する場合はコメントアウトして対応する
    module: "@nuxtjs/robots"
  },
  leaflet: {
    module: "@nuxtjs/leaflet"
  },
  mdc: {
    module: "@nuxtjs/mdc"
  },
  unocss: {
    module: "@unocss/nuxt",
    options: unocssConfig
  },
  aos: {
    module: "nuxt-aos"
  }
};

const defaultOptions = {
  scss: true,
  bootstrap: {
    prefix: ["", "B"],
    presets: {
      "button-color": ["primary", "secondary", "success", "danger", "warning", "info", "light", "dark", "link", "outline-primary", "outline-secondary", "outline-success", "outline-danger", "outline-warning", "outline-info", "outline-light", "outline-dark"],
      "alert-color": ["primary", "secondary", "success", "danger", "warning", "info", "light", "dark"],
      "background-color": ["primary", "secondary", "success", "danger", "warning", "info", "primary-subtle", "secondary-subtle", "success-subtle", "danger-subtle", "warning-subtle", "info-subtle", "light", "dark", "light-subtle", "dark-subtle", "body-secondary", "body-tertiary", "body", "black", "white", "transparent"],
      "text-color": ["primary", "primary-emphasis", "secondary", "secondary-emphasis", "success", "success-emphasis", "danger", "danger-emphasis", "warning", "warning-emphasis", "info", "info-emphasis", "light", "light-emphasis", "dark", "dark-emphasis", "body", "body-emphasis", "body-secondary", "body-tertiary", "black", "white", "black-50", "white-50"],
      "border-color": ["primary", "secondary", "success", "danger", "warning", "info", "primary-subtle", "secondary-subtle", "success-subtle", "danger-subtle", "warning-subtle", "info-subtle", "light", "dark", "light-subtle", "dark-subtle", "black", "white"],
      "text-bg-color": ["primary", "secondary", "success", "danger", "warning", "info", "light", "dark"],
      "link-color": ["primary", "secondary", "success", "danger", "warning", "info", "light", "dark", "body-emphasis"]
    }
  },
  html: {
    prefix: "B"
  },
  icon: {
    prefix: "B"
  },
  extend: {
    prefix: ["", "B"]
  },
  spec: {
    prefix: ["", "B"]
  },
  unocss: {
    prefix: "un"
  },
  image: true,
  fonts: true,
  sitemap: true,
  robots: true,
  shiki: true,
  leaflet: true,
  mdc: true,
  tiptap: true,
  vueuse: {
    prefix: ""
  },
  pwa: true,
  aos: true,
  echarts: true,
  dynamicRoute: {
    defaults: {
      lang: "en"
    }
  },
  swiper: {
    prefix: ""
  },
  integration: {
    prefix: "",
    protocol: {
      "local-storage": {
        type: "local"
      },
      "session-storage": {
        type: "session"
      },
      "state": {
        type: "state"
      },
      "api": {
        type: "fetch",
        prefix: "/api/",
        lazy: false,
        // set: false,
        sync: {
          method: "put",
          delay: 500,
          maxWait: 1e3
        }
      },
      "query": {
        type: "query"
      },
      "path": {
        type: "path"
      },
      "hash": {
        type: "hash"
      },
      "params": {
        type: "params"
      },
      "route": {
        type: "route"
      },
      "seo-meta": {
        type: "seoMeta"
      },
      "helper": {
        type: "helper"
      },
      "app-config": {
        type: "appConfig"
      },
      "dom-attr": {
        type: "domAttr"
      },
      "localization": {
        type: "localization"
      }
    },
    viewState: true,
    actionState: {
      type: ["fetch", "helper", "api-fetch", "api-fetch-sync"]
    }
  }
};

const module = defineNuxtModule({
  meta: {
    name: "use-bootstrap",
    configKey: "usebootstrap",
    compatibility: {
      nuxt: ">=3.13.0",
      bridge: false
    }
  },
  defaults: defaultOptions,
  async setup(options, nuxt) {
    const resolver = createResolver(import.meta.url);
    nuxt.options.runtimeConfig.public.usebootstrap = defu(
      nuxt.options.runtimeConfig.public.usebootstrap,
      options
    );
    if (options.scss) {
      nuxt.options.css.unshift("usebootstrap/scss/usebootstrap");
    }
    forOwn(modules, async (value, key) => {
      const option = get(options, key);
      if (option) {
        await installModule(value.module, value.options);
      }
    });
    ["bootstrap", "html", "icon", "extend", "integration", "spec", "swiper", "vueuse"].forEach((category) => {
      const components = selectComponents(category);
      forOwn(components, (value, key) => {
        const option = get(options, category);
        if (option) {
          const htmlPrefixes = castArray(option.prefix);
          htmlPrefixes.forEach((prefix) => {
            if (value.alias) {
              const item = getComponent(value.alias);
              if (item && item.path) {
                addComponent({
                  name: prefix ? `${prefix}-${key}` : key,
                  filePath: resolver.resolve(item.path)
                });
              }
            } else if (value.path) {
              if (value.export) {
                addComponent({
                  name: prefix ? `${prefix}-${key}` : key,
                  filePath: value.path,
                  export: value.export,
                  mode: value.mode
                });
              } else {
                addComponent({
                  name: prefix ? `${prefix}-${key}` : key,
                  filePath: resolver.resolve(value.path)
                });
              }
            }
          });
        }
      });
    });
    ["bootstrap", "static", "vueuse", "shiki"].forEach((category) => {
      const components = selectPlugins(category);
      components.forEach((value) => {
        const option = get(options, category);
        if (option && value.path) {
          addPlugin(resolver.resolve(value.path));
        }
      });
    });
  }
});

export { module as default };
